apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "zeppelin-fullname" . }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    component: zeppelin
spec:
  securityContext:
    fsGroup: 1000
  replicas: {{ .Values.zeppelin.replicas }}
  strategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      component: "zeppelin"
  template:
    metadata:
      labels:
        heritage: {{ .Release.Service | quote }}
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        component: "zeppelin"
    spec:
      containers:
        - name: {{ template "zeppelin-fullname" . }}
          image: "{{ .Values.zeppelin.image.repository }}:{{ .Values.zeppelin.image.tag }}"
          imagePullPolicy: {{ .Values.zeppelin.image.pullPolicy | quote }}
          command: ["/bin/bash"]
          args:
            - /etc/run/init.sh
          ports:
            - containerPort: {{ .Values.zeppelin.containerPort }}
          resources:
{{ toYaml .Values.zeppelin.resources | indent 12 }}
          readinessProbe:
            httpGet:
              path: /
              port: {{ .Values.zeppelin.containerPort }}
            initialDelaySeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: {{ .Values.zeppelin.containerPort }}
            initialDelaySeconds: 90
          env:
            - name: MASTER
              value: "spark://{{ template "master-fullname" . }}:{{ .Values.master.servicePort }}"
            - name: IGZ_DATA_CONFIG_FILE
              value: "/tmp/v3io.conf"
            - name: CURRENT_NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
          volumeMounts:
            - mountPath: "/etc/config"
              name: "hadoop-config"
            - mountPath: "/etc/run"
              name: "init-volume"
            - mountPath: "/dev/shm"
              name: "shm"
            - mountPath: "/tmp/dayman"
              name: "v3iod-comm"
            - mountPath: "/igz/.igz"
              name: "v3io-auth"
            - mountPath: "/spark/conf"
              name: "spark-debug-config"
{{- if .Values.zeppelin.preloadNotebooks.enabled }}
            - mountPath: "/tmp/notebooks"
              name: "notebook-volume"
{{- end }}        
      volumes:
          - name: "hadoop-config"
            configMap:
              name: "{{ .Release.Name }}-hadoop-config"
          - name: "init-volume"
            configMap:
              name: {{ template "zeppelin-fullname" . }}
          - name: "shm"
            hostPath:
              path: "/dev/shm"
          - name: "v3iod-comm"
            hostPath:
              path: "/tmp/dayman"
          - name: "v3io-auth"
            secret:
              secretName: "{{ .Release.Name }}-v3io-auth"
          - name: "spark-debug-config"
            configMap:
              name: "{{ .Release.Name }}-spark-debug-config"
{{- if .Values.zeppelin.preloadNotebooks.enabled }}
          - name: "notebook-volume"
            configMap:
              name: {{ template "zeppelin-fullname" . }}-notebooks
{{- end }}              
